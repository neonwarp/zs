name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version (e.g. 0.3.1)
        required: true
      draft:
        description: Create as draft?
        required: false
        default: "false"
      prerelease:
        description: Mark as prerelease?
        required: false
        default: "false"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      BINARY_NAME: zs

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.2

      - name: Run Zig tests
        run: zig test src/main.zig

      - name: Build (windows x86_64)
        run: zig build -Dtarget=x86_64-windows-gnu -Doptimize=ReleaseFast --prefix zig-out-windows

      - name: Prepare assets
        run: |
          set -e
          mkdir -p dist

          if [ -f "zig-out-windows/bin/$BINARY_NAME.exe" ]; then
            cp zig-out-windows/bin/$BINARY_NAME.exe dist/${BINARY_NAME}-windows-x86_64.exe
          else
            echo "Binary not found"; exit 1
          fi

          if [ -f "zs.ps1" ]; then
            cp zs.ps1 dist/zs.ps1
          else
            echo "WARNING: zs.ps1 not found in repo root" >&2
          fi

          (cd dist && for f in *; do sha256sum "$f" > "$f".sha256; done)
          ls -l dist

      - name: Generate changelog
        run: |
          set -e
          mkdir -p dist

          NEW_TAG="v${{ inputs.version }}"
          PREV_TAG=$(git tag -l 'v*' --sort=-v:refname | head -1)

          if [ -z "$PREV_TAG" ]; then
            echo "No previous tag found. Using full history."
            {
              echo "# Changes for $NEW_TAG"
              echo ""
              git log --pretty=format:"* %s (%h)"
            } > dist/CHANGELOG.md
          else
            echo "Previous tag: $PREV_TAG"
            {
              echo "# Changes for $NEW_TAG"
              echo ""
              git log "${PREV_TAG}..HEAD" --pretty=format:"* %s (%h)" --no-merges
            } > dist/CHANGELOG.md
          fi
          echo ""
          echo "Changelog preview:"
          sed -n '1,40p' dist/CHANGELOG.md

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          name: v${{ inputs.version }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          body_path: dist/CHANGELOG.md
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
